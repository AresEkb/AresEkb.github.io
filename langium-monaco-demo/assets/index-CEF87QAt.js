import{cG as o,bc as d,bD as p,E as e,aV as u,_ as c,o as G,I as g}from"./monaco-vscode-base-service-override-BYqBQsid.js";import{kZ as v,or as l,ot as a}from"./monaco-vscode-api-CofsR7n8.js";import{T as m}from"./files.contribution._fileEditorFactory-CIdUKUGS.js";import{f as D,w as t,G as h}from"./monaco-vscode-configuration-service-override-C_9dpF2l.js";import{M as S,a as f,f as r}from"./editor-BVNZTJm3.js";import"./monaco-vscode-editor-api-CVotD80_.js";class N{constructor(){this.onWillDispose=e.None,this.hasMaximizedGroup=()=>!1,this.windowId=u.vscodeWindowId,this.onDidLayout=e.None,this.onDidScroll=e.None,this.isReady=!0,this.whenReady=Promise.resolve(),this.whenRestored=Promise.resolve(),this.hasRestorableState=!1,this.centerLayout=t,this.isLayoutCentered=t,this.enforcePartOptions=t,this.onDidChangeActiveGroup=e.None,this.onDidAddGroup=e.None,this.onDidRemoveGroup=e.None,this.onDidMoveGroup=e.None,this.onDidActivateGroup=e.None,this.onDidChangeGroupIndex=e.None,this.onDidChangeGroupLocked=e.None,this.onDidChangeGroupMaximized=e.None,this.activeGroup=r,this.groups=[r],this.count=0,this.orientation=h.HORIZONTAL,this.getGroups=()=>[],this.getGroup=()=>{},this.activateGroup=t,this.getSize=t,this.setSize=t,this.arrangeGroups=t,this.toggleMaximizeGroup=t,this.toggleExpandGroup=t,this.applyLayout=t,this.getLayout=t,this.setGroupOrientation=t,this.findGroup=()=>{},this.addGroup=t,this.removeGroup=t,this.moveGroup=t,this.mergeGroup=t,this.mergeAllGroups=t,this.copyGroup=t,this.partOptions=a,this.onDidChangeEditorPartOptions=e.None,this.createEditorDropTarget=t}get contentDimension(){return t()}get sideGroup(){return t()}}class E{constructor(){this.getScopedInstantiationService=t,this.registerContextKeyProvider=t,this.saveWorkingSet=t,this.getWorkingSets=t,this.applyWorkingSet=t,this.deleteWorkingSet=t,this.onDidCreateAuxiliaryEditorPart=e.None,this.mainPart=new N,this.activePart=this.mainPart,this.parts=[this.mainPart],this.getPart=t,this.createAuxiliaryEditorPart=t,this.onDidChangeGroupMaximized=e.None,this.toggleMaximizeGroup=t,this.toggleExpandGroup=t,this.partOptions=a,this.createEditorDropTarget=t,this._serviceBrand=void 0,this.getLayout=t,this.onDidChangeActiveGroup=e.None,this.onDidAddGroup=e.None,this.onDidRemoveGroup=e.None,this.onDidMoveGroup=e.None,this.onDidActivateGroup=e.None,this.onDidLayout=e.None,this.onDidScroll=e.None,this.onDidChangeGroupIndex=e.None,this.onDidChangeGroupLocked=e.None,this.activeGroup=r,this.groups=[r],this.count=0,this.orientation=h.HORIZONTAL,this.isReady=!1,this.whenReady=Promise.resolve(),this.whenRestored=Promise.resolve(),this.hasRestorableState=!1,this.getGroups=()=>[],this.getGroup=()=>{},this.activateGroup=t,this.getSize=t,this.setSize=t,this.arrangeGroups=t,this.applyLayout=t,this.centerLayout=t,this.isLayoutCentered=()=>!1,this.setGroupOrientation=t,this.findGroup=()=>{},this.addGroup=t,this.removeGroup=t,this.moveGroup=t,this.mergeGroup=t,this.mergeAllGroups=t,this.copyGroup=t,this.onDidChangeEditorPartOptions=e.None,this.enforcePartOptions=t}get contentDimension(){return t()}get sideGroup(){return t()}}let s=class extends f{constructor(n){super(n.createInstance(E),!0,n)}};s=c([G(0,g)],s);function L(i){return{[p.toString()]:new o(l,void 0,!0),[d.toString()]:new o(S,[i,()=>!1],!0),[v.toString()]:new o(m,[],!1),[D.toString()]:new o(s)}}export{S as MonacoEditorService,L as default};

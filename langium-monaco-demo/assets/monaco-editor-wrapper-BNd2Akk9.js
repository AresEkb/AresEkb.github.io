const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-qY1GkVaY.js","assets/monaco-vscode-base-service-override-BYqBQsid.js","assets/monaco-vscode-base-service-override-CWVMh0O0.css","assets/monaco-vscode-api-CofsR7n8.js","assets/monaco-vscode-editor-api-CVotD80_.js","assets/monaco-vscode-configuration-service-override-C_9dpF2l.js","assets/monaco-vscode-editor-api-CU2SokHu.css","assets/monaco-vscode-api-BfI3R68m.css","assets/workbenchThemeService.service-B8QZVqmt.js","assets/tokenClassificationRegistry-DZtAbFYe.js","assets/index-BPOe4Pu5.css","assets/index-lcRw0zhU.js","assets/index-sIP7ilWO.js","assets/index-CEhqlLL9.css","assets/index-7G4fTsao.js","assets/views-Dljn5Fwb.js","assets/files.contribution._fileEditorFactory-CIdUKUGS.js","assets/monaco-vscode-extension-api-CARuSqvA.js","assets/views-C9FbmURs.css","assets/editor-BVNZTJm3.js","assets/index-BAsNJ4_y.js","assets/index-BhP5tXDe.css","assets/index-CEF87QAt.js","assets/index-B7jaQFCX.js"])))=>i.map(i=>d[i]);
import{gx as Ae,gy as B,gz as q,gA as Ce,gB as ne,gC as re,gD as We,gE as Fe,gF as je,gG as Ue,gH as Ve,gI as ze,gJ as Be,gK as ge,gL as ue,gM as qe,gN as Ne,gO as He,gP as Ke}from"./monaco-vscode-api-CofsR7n8.js";import{aG as M,aH as E,aI as Ge,aq as I}from"./monaco-vscode-editor-api-CVotD80_.js";import{U as ye,r as Je,a as Xe}from"./vscode-languageclient-BK-kD1ov.js";import{cn as Qe,I as Ye,cf as Ze,aO as et,co as tt,cp as it,cq as nt,cr as rt,cs as w}from"./monaco-vscode-configuration-service-override-C_9dpF2l.js";import{cs as st,$ as ot,Z as at,aR as d,_ as p,o as g,q as _,aX as ct,a$ as lt,V as fe,z as Le,aS as dt,m as be,k as N,oq as gt,mK as ut,dw as ft,bA as Se,dP as ht,aP as xe,mM as $,D as C,a5 as pt,w1 as H,d1 as R,s0 as P,r$ as j,cO as Ee,W as mt,as as vt,l as a,ia as Re,da as W,s1 as ke,h as O,ih as wt,bw as Ct,w2 as yt,d5 as Lt,U as T,j as bt,d7 as se,d8 as oe,I as F,p as St,bq as De,R as ae,cy as xt,cx as Et,w3 as Rt,w4 as kt,E as Dt,cH as U,S as y,w5 as Tt,tw as Te,bU as _t,cF as $t,vD as Mt,cG as x,w6 as It,lV as he,r as _e,fh as Pt,cU as Ot,dz as At,dA as Wt,aK as Ft,oi as jt,T as S,s as ce,dm as $e,mJ as Me,w7 as pe,aJ as Ut,ba as Vt,w8 as zt,t as Bt,w9 as qt,vx as Nt}from"./monaco-vscode-base-service-override-BYqBQsid.js";import{W as Ht,a as Kt,t as Gt}from"./vscode-lsp-Cixq1BNr.js";class Jt{$type;id;config;logger;editor;diffEditor;modelRefs;onTextChanged;textChangedDiposeables={};modelDisposables={};modelRefDisposeTimeout=-1;constructor(e,t,i,n){this.$type=e,this.id=t,this.logger=n,this.config={codeResources:i?.codeResources??void 0,useDiffEditor:i?.useDiffEditor??!1,readOnly:i?.readOnly??!1,domReadOnly:i?.domReadOnly??!1,overrideAutomaticLayout:i?.overrideAutomaticLayout??!0},this.config.editorOptions={...i?.editorOptions,automaticLayout:i?.overrideAutomaticLayout??!0},this.config.diffEditorOptions={...i?.diffEditorOptions,automaticLayout:i?.overrideAutomaticLayout??!0},this.config.languageDef=i?.languageDef}getConfig(){return this.config}haveEditor(){return this.editor!==void 0||this.diffEditor!==void 0}getEditor(){return this.editor}getDiffEditor(){return this.diffEditor}getTextModels(){return{modified:this.modelRefs.modified.object.textEditorModel,original:this.modelRefs.original?.object.textEditorModel??void 0}}registerOnTextChangedCallbacks(e){this.onTextChanged=e}setModelRefDisposeTimeout(e){this.modelRefDisposeTimeout=e}async init(){const e=this.config.languageDef;if(e){if(this.$type==="extended")throw new Error("Language definition is not supported for extended editor apps where textmate is used.");M.register(e.languageExtensionConfig),M.getLanguages().filter(n=>n.id===e.languageExtensionConfig.id).length===0&&M.register({id:e.languageExtensionConfig.id}),e.monarchLanguage&&M.setMonarchTokensProvider(e.languageExtensionConfig.id,e.monarchLanguage),e.theme&&(E.defineTheme(e.theme.name,e.theme.data),E.setTheme(e.theme.name))}this.config.editorOptions?.["semanticHighlighting.enabled"]!==void 0&&st.get(ot).updateValue("editor.semanticHighlighting.enabled",this.config.editorOptions["semanticHighlighting.enabled"],at.USER);const t={text:this.config.codeResources?.modified?.text??"",uri:this.config.codeResources?.modified?.uri??`default-uri-modified-${this.id}`,enforceLanguageId:this.config.codeResources?.modified?.enforceLanguageId??void 0};if(this.modelRefs={modified:await this.buildModelReference(t,this.logger)},this.config.useDiffEditor===!0){const i={text:this.config.codeResources?.original?.text??"",uri:this.config.codeResources?.original?.uri??`default-uri-original-${this.id}`,enforceLanguageId:this.config.codeResources?.original?.enforceLanguageId??void 0};this.modelRefs.original=await this.buildModelReference(i,this.logger)}this.logger?.info("Init of EditorApp was completed.")}async createEditors(e){if(this.config.useDiffEditor===!0){this.diffEditor=E.createDiffEditor(e,this.config.diffEditorOptions);const t={modified:this.modelRefs.modified.object.textEditorModel,original:this.modelRefs.original.object.textEditorModel};this.diffEditor.setModel(t),this.announceModelUpdate(t)}else{const t={modified:this.modelRefs.modified.object.textEditorModel};this.editor=E.create(e,{...this.config.editorOptions,model:t.modified}),this.announceModelUpdate(t)}}async updateCodeResources(e){let t=!1,i=!1;if(e?.modified!==void 0&&e.modified.uri!==this.modelRefs.modified.object.resource.path&&(this.modelDisposables.modified=this.modelRefs.modified,this.modelRefs.modified=await this.buildModelReference(e.modified,this.logger),t=!0),e?.original!==void 0&&e.original.uri!==this.modelRefs.original?.object.resource.path&&(this.modelDisposables.original=this.modelRefs.original,this.modelRefs.original=await this.buildModelReference(e.original,this.logger),i=!0),this.config.useDiffEditor===!0)if(t&&i){const n={modified:this.modelRefs.modified.object.textEditorModel,original:this.modelRefs.original.object.textEditorModel};this.diffEditor?.setModel(n),this.announceModelUpdate(n)}else this.logger?.info("Diff Editor: Code resources were not updated. They are ether unchanged or undefined.");else if(t){const n={modified:this.modelRefs.modified.object.textEditorModel};this.editor?.setModel(n.modified),this.announceModelUpdate(n)}else this.logger?.info("Editor: Code resources were not updated. They are either unchanged or undefined.");await this.disposeModelRefs()}async buildModelReference(e,t){const i=e.text,n=await Ge(ye.parse(e.uri),i);n.object.textEditorModel?.getValue()!==i&&n.object.textEditorModel?.setValue(i);const r=e.enforceLanguageId;return r!==void 0&&(n.object.setLanguageId(r),t?.info(`Main languageId is enforced: ${r}`)),n}announceModelUpdate(e){if(this.onTextChanged!==void 0){let t=!1;if(e.modified!==void 0&&e.modified!==null){const i=this.textChangedDiposeables.modified;this.textChangedDiposeables.modified=e.modified.onDidChangeContent(()=>{V(e,this.onTextChanged)}),i?.dispose(),t=!0}if(e.original!==void 0&&e.original!==null){const i=this.textChangedDiposeables.original;this.textChangedDiposeables.original=e.original.onDidChangeContent(()=>{V(e,this.onTextChanged)}),i?.dispose(),t=!0}t&&V(e,this.onTextChanged)}}async dispose(){this.editor&&(this.editor.dispose(),this.editor=void 0),this.diffEditor&&(this.diffEditor.dispose(),this.diffEditor=void 0),this.textChangedDiposeables.modified?.dispose(),this.textChangedDiposeables.original?.dispose(),await this.disposeModelRefs()}async disposeModelRefs(){const e=()=>{if(this.logger?.getLevel()===d.Debug){const t=E.getModels();this.logger.debug("Current model URIs:"),t.forEach((i,n)=>{this.logger?.debug(`${i.uri.toString()}`)})}this.modelDisposables.modified!==void 0&&!this.modelDisposables.modified.object.isDisposed()&&(this.modelDisposables.modified.dispose(),this.modelDisposables.modified=void 0),this.modelDisposables.original!==void 0&&!this.modelDisposables.original.object.isDisposed()&&(this.modelDisposables.original.dispose(),this.modelDisposables.original=void 0),this.logger?.getLevel()===d.Debug&&(this.modelDisposables.modified===void 0&&this.modelDisposables.original===void 0?this.logger.debug("All model references are disposed."):this.logger.debug("Model references are still available."))};this.modelRefDisposeTimeout>0?(this.logger?.debug("Using async dispose of model references"),await new Promise(t=>setTimeout(()=>{e(),t()},this.modelRefDisposeTimeout))):e()}updateLayout(){this.config.useDiffEditor??!1?this.diffEditor?.layout():this.editor?.layout()}}const Xt=s=>{if(s instanceof URL)return s.href;{const e=new TextEncoder().encode(s),t=Array.from(e,n=>String.fromCodePoint(n)).join(""),i=btoa(t);return new URL(`data:text/plain;base64,${i}`).href}},V=(s,e)=>{const t=s.modified?.getValue()??"",i=s.original?.getValue()??"";e?.({modified:t,original:i})};var me=Je(),z,ve;function Qt(){return ve||(ve=1,z=Xe()),z}var D=Qt();class Yt extends D.BaseLanguageClient{messageTransports;constructor({id:e,name:t,clientOptions:i,messageTransports:n}){super(e??t.toLowerCase(),t,i),this.messageTransports=n}createMessageTransports(e){return Promise.resolve(this.messageTransports)}}const Zt=5*gt.MB;let K=class extends ct{constructor(e,t,i,n){super(),this.resource=e,this.donotUseFormatters=i,this.fileService=n,this.backupIndex=1,this.buffer="",this.setLevel(t),this.flushDelayer=new lt(100),this.initializePromise=this.initialize()}async flush(){if(!this.buffer)return;await this.initializePromise;let e=await this.loadContent();e.length>Zt&&(await this.fileService.writeFile(this.getBackupResource(),fe.fromString(e)),e=""),this.buffer&&(e+=this.buffer,this.buffer="",await this.fileService.writeFile(this.resource,fe.fromString(e)))}async initialize(){try{await this.fileService.createFile(this.resource)}catch(e){if(e.fileOperationResult!==Le.FILE_MODIFIED_SINCE)throw e}}log(e,t){this.donotUseFormatters?this.buffer+=t:this.buffer+=`${this.getCurrentTimestamp()} [${this.stringifyLogLevel(e)}] ${t}
`,this.flushDelayer.trigger(()=>this.flush())}getCurrentTimestamp(){const e=n=>n<10?`0${n}`:n,t=n=>n<10?`00${n}`:n<100?`0${n}`:n,i=new Date;return`${i.getFullYear()}-${e(i.getMonth()+1)}-${e(i.getDate())} ${e(i.getHours())}:${e(i.getMinutes())}:${e(i.getSeconds())}.${t(i.getMilliseconds())}`}getBackupResource(){return this.backupIndex=this.backupIndex>5?1:this.backupIndex,dt(be(this.resource),`${N(this.resource)}_${this.backupIndex++}`)}async loadContent(){try{return(await this.fileService.readFile(this.resource)).value.toString()}catch{return""}}stringifyLogLevel(e){switch(e){case d.Debug:return"debug";case d.Error:return"error";case d.Info:return"info";case d.Trace:return"trace";case d.Warning:return"warning"}return""}};K=p([g(3,_)],K);class ei extends ut{constructor(e,t,i){super(e,t),this.fileService=i}doCreateLogger(e,t,i){const n=new Qe(t);return ft(e,this.fileService).then(()=>n.logger=new K(e,n.getLevel(),!!i?.donotUseFormatters,this.fileService)),n}}let G=class extends C{constructor(e,t,i,n,r){super(),this.environmentService=e,this.fileService=t,this.jsonEditingService=i,this.logService=n,this.loggerService=r,this._onDidChangeDefaultLogLevels=this._register(new pt),this.onDidChangeDefaultLogLevels=this._onDidChangeDefaultLogLevels.event}async getDefaultLogLevels(){const e=await this._parseLogLevelsFromArgv();return{default:e?.default??this._getDefaultLogLevelFromEnv(),extensions:e?.extensions??this._getExtensionsDefaultLogLevelsFromEnv()}}async getDefaultLogLevel(e){const t=await this._parseLogLevelsFromArgv()??{};return e?(e=e.toLowerCase(),this._getDefaultLogLevel(t,e)):this._getDefaultLogLevel(t)}async setDefaultLogLevel(e,t){const i=await this._parseLogLevelsFromArgv()??{};if(t){t=t.toLowerCase();const n=this._getDefaultLogLevel(i,t);i.extensions=i.extensions??[];const r=i.extensions.find(([o])=>o===t);r?r[1]=e:i.extensions.push([t,e]),await this._writeLogLevelsToArgv(i);const c=[...this.loggerService.getRegisteredLoggers()].filter(o=>o.extensionId&&o.extensionId.toLowerCase()===t);for(const{resource:o}of c)this.loggerService.getLogLevel(o)===n&&this.loggerService.setLogLevel(o,e)}else{const n=this._getDefaultLogLevel(i);i.default=e,await this._writeLogLevelsToArgv(i),this.loggerService.getLogLevel()===n&&this.loggerService.setLogLevel(e)}this._onDidChangeDefaultLogLevels.fire()}_getDefaultLogLevel(e,t){if(t){const i=e.extensions?.find(([n])=>n===t);if(i)return i[1]}return e.default??H(this.environmentService)}async _writeLogLevelsToArgv(e){const t=[];R(e.default)||t.push(P(e.default));for(const[i,n]of e.extensions??[])t.push(`${i}=${P(n)}`);await this.jsonEditingService.write(this.environmentService.argvResource,[{path:["log-level"],value:t.length?t:void 0}],!0)}async _parseLogLevelsFromArgv(){const e={extensions:[]},t=await this._readLogLevelsFromArgv();for(const i of t){const n=Ae.exec(i);if(n&&n[1]&&n[2]){const r=j(n[2]);R(r)||e.extensions?.push([n[1].toLowerCase(),r])}else{const r=j(i);R(r)||(e.default=r)}}return!R(e.default)||e.extensions?.length?e:void 0}async _readLogLevelsFromArgv(){try{const e=await this.fileService.readFile(this.environmentService.argvResource),t=Ee(e.value.toString());return mt(t["log-level"])?[t["log-level"]]:Array.isArray(t["log-level"])?t["log-level"]:[]}catch(e){vt(e)!==Le.FILE_NOT_FOUND&&this.logService.error(e)}return[]}_getDefaultLogLevelFromEnv(){return H(this.environmentService)}_getExtensionsDefaultLogLevelsFromEnv(){const e=[];for(const[t,i]of this.environmentService.extensionLogLevel??[]){const n=j(i);R(n)||e.push([t,n])}return e}};G=p([g(0,Se),g(1,_),g(2,ht),g(3,xe),g(4,$)],G);const ti=a(0,"Window");let v=class extends Re{static{this.ID="workbench.action.setLogLevel"}static{this.TITLE=W(7507,"Set Log Level...")}constructor(e,t,i,n,r,c){super(e,t),this.quickInputService=i,this.loggerService=n,this.outputService=r,this.defaultLogLevelsService=c}async run(){const e=await this.selectLogLevelOrChannel();e!==null&&(ke(e)?this.loggerService.setLogLevel(e):await this.setLogLevelForChannel(e))}async selectLogLevelOrChannel(){const e=await this.defaultLogLevelsService.getDefaultLogLevels(),t=[],i=[],n=this.loggerService.getLogLevel();for(const c of this.outputService.getChannelDescriptors()){if(!this.outputService.canSetLogLevel(c))continue;const o=B(c)?[c.source]:q(c)?c.source:[];if(!o.length)continue;const l=o.reduce((f,h)=>Math.min(f,this.loggerService.getLogLevel(h.resource)??n),n),u={id:c.id,label:c.label,description:l!==n?this.getLabel(l):void 0,channel:c};c.extensionId?t.push(u):i.push(u)}const r=[];return r.push({type:"separator",label:a(7508,"All")}),r.push(...this.getLogLevelEntries(e.default,this.loggerService.getLogLevel(),!0)),t.length&&(r.push({type:"separator",label:a(7509,"Extension Logs")}),r.push(...t.sort((c,o)=>c.label.localeCompare(o.label)))),r.push({type:"separator",label:a(7510,"Logs")}),r.push(...i.sort((c,o)=>c.label.localeCompare(o.label))),new Promise((c,o)=>{const l=new O,u=l.add(this.quickInputService.createQuickPick({useSeparators:!0}));u.placeholder=a(7511,"Set Log Level"),u.items=r;let f;l.add(u.onDidTriggerItemButton(h=>{u.hide(),this.defaultLogLevelsService.setDefaultLogLevel(h.item.level)})),l.add(u.onDidAccept(h=>{f=u.selectedItems[0],u.hide()})),l.add(u.onDidHide(()=>{const h=f?f.level??f:null;l.dispose(),c(h)})),u.show()})}async setLogLevelForChannel(e){const t=await this.defaultLogLevelsService.getDefaultLogLevels(),i=t.extensions.find(r=>r[0]===e.channel.extensionId?.toLowerCase())?.[1]??t.default,n=this.getLogLevelEntries(i,this.outputService.getLogLevel(e.channel)??i,!!e.channel.extensionId);return new Promise((r,c)=>{const o=new O,l=o.add(this.quickInputService.createQuickPick());l.placeholder=e?a(7512," {0}: Select log level",e?.label):a(7513,"Select log level"),l.items=n,l.activeItems=n.filter(f=>f.level===this.loggerService.getLogLevel());let u;o.add(l.onDidTriggerItemButton(f=>{l.hide(),this.defaultLogLevelsService.setDefaultLogLevel(f.item.level,e.channel.extensionId)})),o.add(l.onDidAccept(f=>{u=l.selectedItems[0],l.hide()})),o.add(l.onDidHide(()=>{u&&this.outputService.setLogLevel(e.channel,u.level),o.dispose(),r()})),l.show()})}getLogLevelEntries(e,t,i){const n=i?{iconClass:wt.asClassName(Ct.checkAll),tooltip:a(7514,"Set as Default Log Level")}:void 0;return[{label:this.getLabel(d.Trace,t),level:d.Trace,description:this.getDescription(d.Trace,e),buttons:n&&e!==d.Trace?[n]:void 0},{label:this.getLabel(d.Debug,t),level:d.Debug,description:this.getDescription(d.Debug,e),buttons:n&&e!==d.Debug?[n]:void 0},{label:this.getLabel(d.Info,t),level:d.Info,description:this.getDescription(d.Info,e),buttons:n&&e!==d.Info?[n]:void 0},{label:this.getLabel(d.Warning,t),level:d.Warning,description:this.getDescription(d.Warning,e),buttons:n&&e!==d.Warning?[n]:void 0},{label:this.getLabel(d.Error,t),level:d.Error,description:this.getDescription(d.Error,e),buttons:n&&e!==d.Error?[n]:void 0},{label:this.getLabel(d.Off,t),level:d.Off,description:this.getDescription(d.Off,e),buttons:n&&e!==d.Off?[n]:void 0}]}getLabel(e,t){const i=yt(e).value;return e===t?`$(check) ${i}`:i}getDescription(e,t){return t===e?a(7515,"Default"):void 0}};v=p([g(2,Lt),g(3,$),g(4,Ce),g(5,ne)],v);(class extends Re{static{this.ID="workbench.action.openSessionLogFile"}static{this.TITLE=W(7516,"Open Window Log File (Session)...")}constructor(e,t,i,n,r,c){super(e,t),this.environmentService=i,this.fileService=n,this.quickInputService=r,this.editorService=c}async run(){const e=await this.quickInputService.pick(this.getSessions().then(t=>t.map((i,n)=>({id:i.toString(),label:N(i),description:n===0?a(7517,"Current"):void 0}))),{canPickMany:!1,placeHolder:a(7518,"Select Session")});if(e){const t=await this.quickInputService.pick(this.getLogFiles(T.parse(e.id)).then(i=>i.map(n=>({id:n.toString(),label:N(n)}))),{canPickMany:!1,placeHolder:a(7519,"Select Log file")});if(t)return this.editorService.openEditor({resource:T.parse(t.id),options:{pinned:!0}}).then(()=>{})}}async getSessions(){const e=this.environmentService.logsHome.with({scheme:this.environmentService.logFile.scheme}),t=[e],i=await this.fileService.resolve(be(e));return i.children&&t.push(...i.children.filter(n=>!bt(n.resource,e)&&n.isDirectory&&/^\d{8}T\d{6}$/.test(n.name)).sort().reverse().map(n=>n.resource)),t}async getLogFiles(e){const t=await this.fileService.resolve(e);return t.children?t.children.filter(i=>!i.isDirectory).map(i=>i.resource):[]}});se(class extends oe{constructor(){super({id:v.ID,title:v.TITLE,category:re.Developer,f1:!0})}run(s){return s.get(F).createInstance(v,v.ID,v.TITLE.value).run()}});se(class extends oe{constructor(){super({id:"workbench.action.setDefaultLogLevel",title:W(7504,"Set Default Log Level"),category:re.Developer})}run(s,e,t){return s.get(ne).setDefaultLogLevel(e,t)}});let J=class extends C{constructor(e,t,i){super(),this.loggerService=e,this.contextKeyService=t,this.uriIdentityService=i,this.contextKeys=new Rt,this.outputChannelRegistry=ae.as(We.OutputChannels);const n=kt.bindTo(t);n.set(P(e.getLogLevel())),this._register(e.onDidChangeLogLevel(r=>{ke(r)&&n.set(P(e.getLogLevel()))})),this.onDidAddLoggers(e.getRegisteredLoggers()),this._register(e.onDidChangeLoggers(({added:r,removed:c})=>{this.onDidAddLoggers(r),this.onDidRemoveLoggers(c)})),this._register(e.onDidChangeVisibility(([r,c])=>{const o=e.getRegisteredLogger(r);o&&(c?this.registerLogChannel(o):this.deregisterLogChannel(o))})),this.registerShowWindowLogAction(),this._register(Dt.filter(t.onDidChangeContext,r=>r.affectsSome(this.contextKeys))(()=>this.onDidChangeContext()))}onDidAddLoggers(e){for(const t of e){if(t.when){const i=U.deserialize(t.when);if(i){for(const n of i.keys())this.contextKeys.add(n);if(!this.contextKeyService.contextMatchesRules(i))continue}}t.hidden||this.registerLogChannel(t)}}onDidChangeContext(){for(const e of this.loggerService.getRegisteredLoggers())e.when&&(this.contextKeyService.contextMatchesRules(U.deserialize(e.when))?this.registerLogChannel(e):this.deregisterLogChannel(e))}onDidRemoveLoggers(e){for(const t of e){if(t.when){const i=U.deserialize(t.when);if(i)for(const n of i.keys())this.contextKeys.delete(n)}this.deregisterLogChannel(t)}}registerLogChannel(e){if(e.group){this.registerCompoundLogChannel(e.group.id,e.group.name,e);return}const t=this.outputChannelRegistry.getChannel(e.id);if(t&&B(t)&&this.uriIdentityService.extUri.isEqual(t.source.resource,e.resource))return;const i=this.outputChannelRegistry.getChannel(e.id),n=i&&B(i)&&i.source.resource.scheme===y.vscodeRemote?this.loggerService.getRegisteredLogger(i.source.resource):void 0;n&&this.deregisterLogChannel(n);const r=i&&e.resource.scheme===y.vscodeRemote,c=r?`${e.id}.remote`:e.id,o=r?a(7505,"{0} (Remote)",e.name??e.id):e.name??e.id;this.outputChannelRegistry.registerChannel({id:c,label:o,source:{resource:e.resource},log:!0,extensionId:e.extensionId})}registerCompoundLogChannel(e,t,i){const n=this.outputChannelRegistry.getChannel(e),r={resource:i.resource,name:i.name??i.id};n?q(n)&&!n.source.some(({resource:c})=>this.uriIdentityService.extUri.isEqual(c,i.resource))&&this.outputChannelRegistry.updateChannelSources(e,[...n.source,r]):this.outputChannelRegistry.registerChannel({id:e,label:t,log:!0,source:[r]})}deregisterLogChannel(e){if(e.group){const t=this.outputChannelRegistry.getChannel(e.group.id);t&&q(t)&&this.outputChannelRegistry.updateChannelSources(e.group.id,t.source.filter(({resource:i})=>!this.uriIdentityService.extUri.isEqual(i,e.resource)))}else this.outputChannelRegistry.removeChannel(e.id)}registerShowWindowLogAction(){this._register(se(class extends oe{constructor(){super({id:Tt,title:W(7506,"Show Window Log"),category:re.Developer,f1:!0})}async run(t){t.get(Ce).showChannel(Te)}}))}};J=p([g(0,$),g(1,St),g(2,De)],J);ae.as(xt.Workbench).registerWorkbenchContribution(J,Et.Restored);let X=class extends ei{constructor(e,t,i){super(e??H(i),$t,t)}};X=p([g(1,_),g(2,_t)],X);const ii=[];let Q=class extends Mt{constructor(e,t){const i=e.createLogger(t.logFile,{id:Te,name:ti});super(i,ii)}};Q=p([g(0,$),g(1,Se)],Q);function ni(s){return{...Fe(),[$.toString()]:new x(X,[s],!0),[xe.toString()]:new x(Q,[],!0),[ne.toString()]:new x(G,[],!0)}}class ri extends It{constructor(e,t){super(e??d.Off,t)}createErrorAndLog(e,...t){return this.getLevel()>=d.Error&&this.error(e,...t),new Error(e)}}const si=s=>{let e="";if(s.url){const t=s;if(!t.url.startsWith("ws://")&&!t.url.startsWith("wss://"))throw new Error(`This is not a proper websocket url: ${t.url}`);e=t.url}else{const t=s;if(e=`${t.secured?"wss":"ws"}://${t.host}`,t.port!==void 0&&t.port!==80&&(e+=`:${t.port}`),t.path!==void 0&&(e+=`/${t.path}`),t.extraParams){const n=new URL(e);for(const[r,c]of Object.entries(t.extraParams))n.searchParams.set(r,c instanceof Array?c.join(","):c.toString());e=n.toString()}}return e};class oi{languageClient;languageClientConfig;worker;port;name;logger;constructor(e){this.languageClientConfig=e.languageClientConfig,this.name=this.languageClientConfig.name??"unnamed",this.logger=e.logger}haveLanguageClient(){return this.languageClient!==void 0}getLanguageClient(){return this.languageClient}getWorker(){return this.worker}isStarted(){return this.languageClient!==void 0&&this.languageClient.isRunning()}async start(){return this.languageClient?.isRunning()??!1?(this.logger?.info("startLanguageClientConnection: monaco-languageclient already running!"),Promise.resolve()):new Promise((e,t)=>{const n=this.languageClientConfig.connection.options;if(n.$type==="WebSocketDirect"||n.$type==="WebSocketParams"||n.$type==="WebSocketUrl"){const r=n.$type==="WebSocketDirect"?n.webSocket:new WebSocket(si(n));this.initMessageTransportWebSocket(r,e,t)}else this.initMessageTransportWorker(n,e,t)})}async restartLanguageClient(e,t=!0){return await this.disposeLanguageClient(t),this.worker=e,this.logger?.info("Re-Starting monaco-languageclient"),this.start()}async initMessageTransportWebSocket(e,t,i){let n=this.languageClientConfig.connection.messageTransports;if(n===void 0){const r=Gt(e);n={reader:new Kt(r),writer:new Ht(r)}}e.readyState===WebSocket.OPEN&&await this.performLanguageClientStart(n,t,i),e.onopen=async()=>{await this.performLanguageClientStart(n,t,i)},e.onerror=r=>{const c={message:`languageClientWrapper (${this.name}): Websocket connection failed.`,error:r.error??"No error was provided."};i(c)}}async initMessageTransportWorker(e,t,i){if(!this.worker){if(e.$type==="WorkerConfig"){const c=e;this.worker=new Worker(c.url.href,{type:c.type,name:c.workerName}),this.worker.onerror=o=>{const l={message:`languageClientWrapper (${this.name}): Illegal worker configuration detected.`,error:o.error??"No error was provided."};i(l)}}else{const c=e;this.worker=c.worker}e.messagePort!==void 0&&(this.port=e.messagePort)}const n=this.port?this.port:this.worker;let r=this.languageClientConfig.connection.messageTransports;r===void 0&&(r={reader:new me.BrowserMessageReader(n),writer:new me.BrowserMessageWriter(n)}),await this.performLanguageClientStart(r,t,i)}async performLanguageClientStart(e,t,i){let n=!0;(this.languageClient?.isRunning()??!1)&&(this.logger?.info("performLanguageClientStart: monaco-languageclient already running!"),t());const r={name:this.languageClientConfig.name??"Monaco Wrapper Language Client",clientOptions:{errorHandler:{error:l=>n?(i(`Error occurred in language client: ${l}`),{action:D.ErrorAction.Shutdown}):{action:D.ErrorAction.Continue},closed:()=>({action:D.CloseAction.DoNotRestart})},...this.languageClientConfig.clientOptions},messageTransports:e};this.languageClient=new Yt(r);const c=this.languageClientConfig.connection.options;this.initRestartConfiguration(e,this.languageClientConfig.restartOptions);const o=c.$type==="WebSocketParams"||c.$type==="WebSocketUrl"||c.$type==="WebSocketDirect";e.reader.onClose(async()=>{if(await this.languageClient?.stop(),o&&c.stopOptions!==void 0){const l=c.stopOptions;l.onCall(this.getLanguageClient()),l.reportStatus!==void 0&&this.logger?.info(this.reportStatus().join(`
`))}});try{if(await this.languageClient.start(),o&&c.startOptions!==void 0){const l=c.startOptions;l.onCall(this.getLanguageClient()),l.reportStatus!==void 0&&this.logger?.info(this.reportStatus().join(`
`))}}catch(l){const u={message:`languageClientWrapper (${this.name}): Start was unsuccessful.`,error:Object.hasOwn(l??{},"cause")?l:"No error was provided."};i(u)}this.logger?.info(`languageClientWrapper (${this.name}): Started successfully.`),t(),n=!1}initRestartConfiguration(e,t){if(t!==void 0){let i=0;const n=e.reader.onError(()=>c),r=e.reader.onClose(()=>c),c=async()=>{if(this.isStarted())try{n.dispose(),r.dispose(),await this.restartLanguageClient(this.worker,t.keepWorker)}finally{i++,i>t.retries&&!this.isStarted()?this.logger?.info("Disabling Language Client. Failed to start clangd after 5 retries"):setTimeout(async()=>{await this.restartLanguageClient(this.worker,t.keepWorker)},t.timeout)}}}}disposeWorker(){this.worker?.terminate(),this.worker=void 0}async disposeLanguageClient(e){try{this.isStarted()&&(await this.languageClient?.dispose(),this.languageClient=void 0,this.logger?.info("monaco-languageclient and monaco-editor were successfully disposed."))}catch(t){const i={message:`languageClientWrapper (${this.name}): Disposing the monaco-languageclient resulted in error.`,error:Object.hasOwn(t??{},"cause")?t:"No error was provided."};return Promise.reject(i)}finally{e&&this.disposeWorker()}}reportStatus(){const e=[],t=this.getLanguageClient();return e.push("LanguageClientWrapper status:"),e.push(`LanguageClient: ${t?.name??"Language Client"} is in a '${D.State[t?.state??1]}' state`),e}}class ai{url;options;constructor(e,t){this.url=e,this.options=t}}class ci{constructor(){this._provider=new je,this.onDidChange=this._provider.onDidChange}addStatus(e){return this._provider.register(e.selector,e)}getLanguageStatus(e){return this._provider.ordered(e).sort((t,i)=>{let n=i.severity-t.severity;return n===0&&(n=he(t.source,i.source)),n===0&&(n=he(t.id,i.id)),n})}}var Y;function Ie(s){if(!Array.isArray(s))return!1;for(let e=0,t=s.length;e<t;e++)if(typeof s[e]!="string")return!1;return!0}function k(s){return Ie(s)&&s.length===2}let Z=Y=class extends C{constructor(e,t,i,n){super(),this._languageService=e,this._extensionResourceLoaderService=t,this._extensionService=i,this._languageConfigurationService=n,this._done=new Map,this._register(this._languageService.onDidRequestBasicLanguageFeatures(async r=>{this._extensionService.whenInstalledExtensionsRegistered().then(()=>{this._loadConfigurationsForMode(r)})})),this._register(this._languageService.onDidChange(()=>{for(const[r]of this._done)this._loadConfigurationsForMode(r)}))}async _loadConfigurationsForMode(e){const t=this._languageService.getConfigurationFiles(e),i=Ft(t.map(r=>r.toString()));if(this._done.get(e)===i)return;this._done.set(e,i);const n=await Promise.all(t.map(r=>this._readConfigFile(r)));for(const r of n)this._handleConfig(e,r)}async _readConfigFile(e){try{const t=await this._extensionResourceLoaderService.readExtensionResource(e),i=[];let n=Ee(t,i);return i.length&&console.error(a(5192,"Errors parsing {0}: {1}",e.toString(),i.map(r=>`[${r.offset}, ${r.length}] ${Ve(r.error)}`).join(`
`))),jt(n)!=="object"&&(console.error(a(5193,"{0}: Invalid format, JSON object expected.",e.toString())),n={}),n}catch(t){return console.error(t),{}}}static _extractValidCommentRule(e,t){const i=t.comments;if(typeof i>"u")return;if(!S(i)){console.warn(`[${e}]: language configuration: expected \`comments\` to be an object.`);return}let n;return typeof i.lineComment<"u"&&(typeof i.lineComment!="string"?console.warn(`[${e}]: language configuration: expected \`comments.lineComment\` to be a string.`):(n=n||{},n.lineComment=i.lineComment)),typeof i.blockComment<"u"&&(k(i.blockComment)?(n=n||{},n.blockComment=i.blockComment):console.warn(`[${e}]: language configuration: expected \`comments.blockComment\` to be an array of two strings.`)),n}static _extractValidBrackets(e,t){const i=t.brackets;if(typeof i>"u")return;if(!Array.isArray(i)){console.warn(`[${e}]: language configuration: expected \`brackets\` to be an array.`);return}let n;for(let r=0,c=i.length;r<c;r++){const o=i[r];if(!k(o)){console.warn(`[${e}]: language configuration: expected \`brackets[${r}]\` to be an array of two strings.`);continue}n=n||[],n.push(o)}return n}static _extractValidAutoClosingPairs(e,t){const i=t.autoClosingPairs;if(typeof i>"u")return;if(!Array.isArray(i)){console.warn(`[${e}]: language configuration: expected \`autoClosingPairs\` to be an array.`);return}let n;for(let r=0,c=i.length;r<c;r++){const o=i[r];if(Array.isArray(o)){if(!k(o)){console.warn(`[${e}]: language configuration: expected \`autoClosingPairs[${r}]\` to be an array of two strings or an object.`);continue}n=n||[],n.push({open:o[0],close:o[1]})}else{if(!S(o)){console.warn(`[${e}]: language configuration: expected \`autoClosingPairs[${r}]\` to be an array of two strings or an object.`);continue}if(typeof o.open!="string"){console.warn(`[${e}]: language configuration: expected \`autoClosingPairs[${r}].open\` to be a string.`);continue}if(typeof o.close!="string"){console.warn(`[${e}]: language configuration: expected \`autoClosingPairs[${r}].close\` to be a string.`);continue}if(typeof o.notIn<"u"&&!Ie(o.notIn)){console.warn(`[${e}]: language configuration: expected \`autoClosingPairs[${r}].notIn\` to be a string array.`);continue}n=n||[],n.push({open:o.open,close:o.close,notIn:o.notIn})}}return n}static _extractValidSurroundingPairs(e,t){const i=t.surroundingPairs;if(typeof i>"u")return;if(!Array.isArray(i)){console.warn(`[${e}]: language configuration: expected \`surroundingPairs\` to be an array.`);return}let n;for(let r=0,c=i.length;r<c;r++){const o=i[r];if(Array.isArray(o)){if(!k(o)){console.warn(`[${e}]: language configuration: expected \`surroundingPairs[${r}]\` to be an array of two strings or an object.`);continue}n=n||[],n.push({open:o[0],close:o[1]})}else{if(!S(o)){console.warn(`[${e}]: language configuration: expected \`surroundingPairs[${r}]\` to be an array of two strings or an object.`);continue}if(typeof o.open!="string"){console.warn(`[${e}]: language configuration: expected \`surroundingPairs[${r}].open\` to be a string.`);continue}if(typeof o.close!="string"){console.warn(`[${e}]: language configuration: expected \`surroundingPairs[${r}].close\` to be a string.`);continue}n=n||[],n.push({open:o.open,close:o.close})}}return n}static _extractValidColorizedBracketPairs(e,t){const i=t.colorizedBracketPairs;if(typeof i>"u")return;if(!Array.isArray(i)){console.warn(`[${e}]: language configuration: expected \`colorizedBracketPairs\` to be an array.`);return}const n=[];for(let r=0,c=i.length;r<c;r++){const o=i[r];if(!k(o)){console.warn(`[${e}]: language configuration: expected \`colorizedBracketPairs[${r}]\` to be an array of two strings.`);continue}n.push([o[0],o[1]])}return n}static _extractValidOnEnterRules(e,t){const i=t.onEnterRules;if(typeof i>"u")return;if(!Array.isArray(i)){console.warn(`[${e}]: language configuration: expected \`onEnterRules\` to be an array.`);return}let n;for(let r=0,c=i.length;r<c;r++){const o=i[r];if(!S(o)){console.warn(`[${e}]: language configuration: expected \`onEnterRules[${r}]\` to be an object.`);continue}if(!S(o.action)){console.warn(`[${e}]: language configuration: expected \`onEnterRules[${r}].action\` to be an object.`);continue}let l;if(o.action.indent==="none")l=I.None;else if(o.action.indent==="indent")l=I.Indent;else if(o.action.indent==="indentOutdent")l=I.IndentOutdent;else if(o.action.indent==="outdent")l=I.Outdent;else{console.warn(`[${e}]: language configuration: expected \`onEnterRules[${r}].action.indent\` to be 'none', 'indent', 'indentOutdent' or 'outdent'.`);continue}const u={indentAction:l};o.action.appendText&&(typeof o.action.appendText=="string"?u.appendText=o.action.appendText:console.warn(`[${e}]: language configuration: expected \`onEnterRules[${r}].action.appendText\` to be undefined or a string.`)),o.action.removeText&&(typeof o.action.removeText=="number"?u.removeText=o.action.removeText:console.warn(`[${e}]: language configuration: expected \`onEnterRules[${r}].action.removeText\` to be undefined or a number.`));const f=this._parseRegex(e,`onEnterRules[${r}].beforeText`,o.beforeText);if(!f)continue;const h={beforeText:f,action:u};if(o.afterText){const m=this._parseRegex(e,`onEnterRules[${r}].afterText`,o.afterText);m&&(h.afterText=m)}if(o.previousLineText){const m=this._parseRegex(e,`onEnterRules[${r}].previousLineText`,o.previousLineText);m&&(h.previousLineText=m)}n=n||[],n.push(h)}return n}static extractValidConfig(e,t){const i=this._extractValidCommentRule(e,t),n=this._extractValidBrackets(e,t),r=this._extractValidAutoClosingPairs(e,t),c=this._extractValidSurroundingPairs(e,t),o=this._extractValidColorizedBracketPairs(e,t),l=typeof t.autoCloseBefore=="string"?t.autoCloseBefore:void 0,u=t.wordPattern?this._parseRegex(e,"wordPattern",t.wordPattern):void 0,f=t.indentationRules?this._mapIndentationRules(e,t.indentationRules):void 0;let h;if(t.folding){const b=t.folding.markers,le=b&&b.start?this._parseRegex(e,"folding.markers.start",b.start):void 0,de=b&&b.end?this._parseRegex(e,"folding.markers.end",b.end):void 0,Oe=le&&de?{start:le,end:de}:void 0;h={offSide:t.folding.offSide,markers:Oe}}const m=this._extractValidOnEnterRules(e,t);return{comments:i,brackets:n,wordPattern:u,indentationRules:f,onEnterRules:m,autoClosingPairs:r,surroundingPairs:c,colorizedBracketPairs:o,autoCloseBefore:l,folding:h,__electricCharacterSupport:void 0}}_handleConfig(e,t){const i=Y.extractValidConfig(e,t);this._languageConfigurationService.register(e,i,50)}static _parseRegex(e,t,i){if(typeof i=="string")try{return new RegExp(i,"")}catch(n){console.warn(`[${e}]: Invalid regular expression in \`${t}\`: `,n);return}if(S(i)){if(typeof i.pattern!="string"){console.warn(`[${e}]: language configuration: expected \`${t}.pattern\` to be a string.`);return}if(typeof i.flags<"u"&&typeof i.flags!="string"){console.warn(`[${e}]: language configuration: expected \`${t}.flags\` to be a string.`);return}try{return new RegExp(i.pattern,i.flags)}catch(n){console.warn(`[${e}]: Invalid regular expression in \`${t}\`: `,n);return}}console.warn(`[${e}]: language configuration: expected \`${t}\` to be a string or an object.`)}static _mapIndentationRules(e,t){const i=this._parseRegex(e,"indentationRules.increaseIndentPattern",t.increaseIndentPattern);if(!i)return;const n=this._parseRegex(e,"indentationRules.decreaseIndentPattern",t.decreaseIndentPattern);if(!n)return;const r={increaseIndentPattern:i,decreaseIndentPattern:n};return t.indentNextLinePattern&&(r.indentNextLinePattern=this._parseRegex(e,"indentationRules.indentNextLinePattern",t.indentNextLinePattern)),t.unIndentedLinePattern&&(r.unIndentedLinePattern=this._parseRegex(e,"indentationRules.unIndentedLinePattern",t.unIndentedLinePattern)),r}};Z=Y=p([g(0,_e),g(1,Ue),g(2,Ye),g(3,Pt)],Z);const li="vscode://schemas/language-configuration",di={allowComments:!0,allowTrailingCommas:!0,default:{comments:{blockComment:["/*","*/"],lineComment:"//"},brackets:[["(",")"],["[","]"],["{","}"]],autoClosingPairs:[["(",")"],["[","]"],["{","}"]],surroundingPairs:[["(",")"],["[","]"],["{","}"]]},definitions:{openBracket:{type:"string",description:a(5194,"The opening bracket character or string sequence.")},closeBracket:{type:"string",description:a(5195,"The closing bracket character or string sequence.")},bracketPair:{type:"array",items:[{$ref:"#/definitions/openBracket"},{$ref:"#/definitions/closeBracket"}]}},properties:{comments:{default:{blockComment:["/*","*/"],lineComment:"//"},description:a(5196,"Defines the comment symbols"),type:"object",properties:{blockComment:{type:"array",description:a(5197,"Defines how block comments are marked."),items:[{type:"string",description:a(5198,"The character sequence that starts a block comment.")},{type:"string",description:a(5199,"The character sequence that ends a block comment.")}]},lineComment:{type:"string",description:a(5200,"The character sequence that starts a line comment.")}}},brackets:{default:[["(",")"],["[","]"],["{","}"]],markdownDescription:a(5201,"Defines the bracket symbols that increase or decrease the indentation. When bracket pair colorization is enabled and {0} is not defined, this also defines the bracket pairs that are colorized by their nesting level.","`colorizedBracketPairs`"),type:"array",items:{$ref:"#/definitions/bracketPair"}},colorizedBracketPairs:{default:[["(",")"],["[","]"],["{","}"]],markdownDescription:a(5202,"Defines the bracket pairs that are colorized by their nesting level if bracket pair colorization is enabled. Any brackets included here that are not included in {0} will be automatically included in {0}.","`brackets`"),type:"array",items:{$ref:"#/definitions/bracketPair"}},autoClosingPairs:{default:[["(",")"],["[","]"],["{","}"]],description:a(5203,"Defines the bracket pairs. When a opening bracket is entered, the closing bracket is inserted automatically."),type:"array",items:{oneOf:[{$ref:"#/definitions/bracketPair"},{type:"object",properties:{open:{$ref:"#/definitions/openBracket"},close:{$ref:"#/definitions/closeBracket"},notIn:{type:"array",description:a(5204,"Defines a list of scopes where the auto pairs are disabled."),items:{enum:["string","comment"]}}}}]}},autoCloseBefore:{default:`;:.,=}])> 
	`,description:a(5205,"Defines what characters must be after the cursor in order for bracket or quote autoclosing to occur when using the 'languageDefined' autoclosing setting. This is typically the set of characters which can not start an expression."),type:"string"},surroundingPairs:{default:[["(",")"],["[","]"],["{","}"]],description:a(5206,"Defines the bracket pairs that can be used to surround a selected string."),type:"array",items:{oneOf:[{$ref:"#/definitions/bracketPair"},{type:"object",properties:{open:{$ref:"#/definitions/openBracket"},close:{$ref:"#/definitions/closeBracket"}}}]}},wordPattern:{default:"",description:a(5207,"Defines what is considered to be a word in the programming language."),type:["string","object"],properties:{pattern:{type:"string",description:a(5208,"The RegExp pattern used to match words."),default:""},flags:{type:"string",description:a(5209,"The RegExp flags used to match words."),default:"g",pattern:"^([gimuy]+)$",patternErrorMessage:a(5210,"Must match the pattern `/^([gimuy]+)$/`.")}}},indentationRules:{default:{increaseIndentPattern:"",decreaseIndentPattern:""},description:a(5211,"The language's indentation settings."),type:"object",properties:{increaseIndentPattern:{type:["string","object"],description:a(5212,"If a line matches this pattern, then all the lines after it should be indented once (until another rule matches)."),properties:{pattern:{type:"string",description:a(5213,"The RegExp pattern for increaseIndentPattern."),default:""},flags:{type:"string",description:a(5214,"The RegExp flags for increaseIndentPattern."),default:"",pattern:"^([gimuy]+)$",patternErrorMessage:a(5215,"Must match the pattern `/^([gimuy]+)$/`.")}}},decreaseIndentPattern:{type:["string","object"],description:a(5216,"If a line matches this pattern, then all the lines after it should be unindented once (until another rule matches)."),properties:{pattern:{type:"string",description:a(5217,"The RegExp pattern for decreaseIndentPattern."),default:""},flags:{type:"string",description:a(5218,"The RegExp flags for decreaseIndentPattern."),default:"",pattern:"^([gimuy]+)$",patternErrorMessage:a(5219,"Must match the pattern `/^([gimuy]+)$/`.")}}},indentNextLinePattern:{type:["string","object"],description:a(5220,"If a line matches this pattern, then **only the next line** after it should be indented once."),properties:{pattern:{type:"string",description:a(5221,"The RegExp pattern for indentNextLinePattern."),default:""},flags:{type:"string",description:a(5222,"The RegExp flags for indentNextLinePattern."),default:"",pattern:"^([gimuy]+)$",patternErrorMessage:a(5223,"Must match the pattern `/^([gimuy]+)$/`.")}}},unIndentedLinePattern:{type:["string","object"],description:a(5224,"If a line matches this pattern, then its indentation should not be changed and it should not be evaluated against the other rules."),properties:{pattern:{type:"string",description:a(5225,"The RegExp pattern for unIndentedLinePattern."),default:""},flags:{type:"string",description:a(5226,"The RegExp flags for unIndentedLinePattern."),default:"",pattern:"^([gimuy]+)$",patternErrorMessage:a(5227,"Must match the pattern `/^([gimuy]+)$/`.")}}}}},folding:{type:"object",description:a(5228,"The language's folding settings."),properties:{offSide:{type:"boolean",description:a(5229,"A language adheres to the off-side rule if blocks in that language are expressed by their indentation. If set, empty lines belong to the subsequent block.")},markers:{type:"object",description:a(5230,"Language specific folding markers such as '#region' and '#endregion'. The start and end regexes will be tested against the contents of all lines and must be designed efficiently"),properties:{start:{type:"string",description:a(5231,"The RegExp pattern for the start marker. The regexp must start with '^'.")},end:{type:"string",description:a(5232,"The RegExp pattern for the end marker. The regexp must start with '^'.")}}}}},onEnterRules:{type:"array",description:a(5233,"The language's rules to be evaluated when pressing Enter."),items:{type:"object",description:a(5233,"The language's rules to be evaluated when pressing Enter."),required:["beforeText","action"],properties:{beforeText:{type:["string","object"],description:a(5234,"This rule will only execute if the text before the cursor matches this regular expression."),properties:{pattern:{type:"string",description:a(5235,"The RegExp pattern for beforeText."),default:""},flags:{type:"string",description:a(5236,"The RegExp flags for beforeText."),default:"",pattern:"^([gimuy]+)$",patternErrorMessage:a(5237,"Must match the pattern `/^([gimuy]+)$/`.")}}},afterText:{type:["string","object"],description:a(5238,"This rule will only execute if the text after the cursor matches this regular expression."),properties:{pattern:{type:"string",description:a(5239,"The RegExp pattern for afterText."),default:""},flags:{type:"string",description:a(5240,"The RegExp flags for afterText."),default:"",pattern:"^([gimuy]+)$",patternErrorMessage:a(5241,"Must match the pattern `/^([gimuy]+)$/`.")}}},previousLineText:{type:["string","object"],description:a(5242,"This rule will only execute if the text above the line matches this regular expression."),properties:{pattern:{type:"string",description:a(5243,"The RegExp pattern for previousLineText."),default:""},flags:{type:"string",description:a(5244,"The RegExp flags for previousLineText."),default:"",pattern:"^([gimuy]+)$",patternErrorMessage:a(5245,"Must match the pattern `/^([gimuy]+)$/`.")}}},action:{type:["string","object"],description:a(5246,"The action to execute."),required:["indent"],default:{indent:"indent"},properties:{indent:{type:"string",description:a(5247,"Describe what to do with the indentation"),default:"indent",enum:["none","indent","indentOutdent","outdent"],markdownEnumDescriptions:[a(5248,"Insert new line and copy the previous line's indentation."),a(5249,"Insert new line and indent once (relative to the previous line's indentation)."),a(5250,`Insert two new lines:
 - the first one indented which will hold the cursor
 - the second one at the same indentation level`),a(5251,"Insert new line and outdent once (relative to the previous line's indentation).")]},appendText:{type:"string",description:a(5252,"Describes text to be appended after the new line and after the indentation."),default:""},removeText:{type:"number",description:a(5253,"Describes the number of characters to remove from the new line's indentation."),default:0}}}}}}}},gi=ae.as(Ot.JSONContribution);gi.registerSchema(li,di);let A=class{static{this.ID="workbench.contrib.languageConfigurationExtensionPoint"}constructor(e){this.instantiationService=e,this.instantiationService.createInstance(Z)}};A=p([g(0,F)],A);At(A.ID,A,Wt.BlockStartup);function ui(){return{...Ze(),[_e.toString()]:new x(Be,[],!1),[ze.toString()]:new x(ci,[],!0)}}function fi(s){return!!s.textEditorModel}let ee=class extends C{constructor(e,t,i){super(),this._modelService=e,this._textModelService=t,this._undoRedoService=i,this._register(this._modelService.onModelRemoved(n=>{const r=this._undoRedoService.getElements(n.uri);if(!(r.past.length===0&&r.future.length===0)){for(const c of r.past)c instanceof pe&&c.setDelegate(this);for(const c of r.future)c instanceof pe&&c.setDelegate(this)}}))}prepareUndoRedo(e){const t=e.getMissingModels();if(t.length===0)return C.None;const i=t.map(async n=>{try{return await this._textModelService.createModelReference(n)}catch{return C.None}});return Promise.all(i).then(n=>({dispose:()=>Ut(n)}))}};ee=p([g(0,ce),g(1,$e),g(2,Me)],ee);let te=class extends zt{constructor(e,t,i,n){super(),this.instantiationService=e,this.textFileService=t,this.fileService=i,this.modelService=n,this.providers=new Map,this.modelsToDispose=new Set}createReferencedObject(e){return this.doCreateReferencedObject(e)}async doCreateReferencedObject(e,t){this.modelsToDispose.delete(e);const i=T.parse(e);if(i.scheme===y.inMemory){if(!this.modelService.getModel(i))throw new Error(`Unable to resolve inMemory resource ${e}`);const r=this.instantiationService.createInstance(ge,i);if(this.ensureResolvedModel(r,e))return r}if(i.scheme===y.untitled){const n=await this.textFileService.untitled.resolve({untitledResource:i});if(this.ensureResolvedModel(n,e))return n}if(this.fileService.hasProvider(i)){const n=await this.textFileService.files.resolve(i,{reason:et.REFERENCE});if(this.ensureResolvedModel(n,e))return n}if(this.providers.has(i.scheme)){await this.resolveTextModelContent(e);const n=this.instantiationService.createInstance(ge,i);if(this.ensureResolvedModel(n,e))return n}if(!t)return await this.fileService.activateProvider(i.scheme),this.doCreateReferencedObject(e,!0);throw new Error(`Unable to resolve resource ${e}`)}ensureResolvedModel(e,t){if(fi(e))return!0;throw new Error(`Unable to resolve resource ${t}`)}destroyReferencedObject(e,t){T.parse(e).scheme!==y.inMemory&&(this.modelsToDispose.add(e),(async()=>{try{const n=await t;if(!this.modelsToDispose.has(e)||(n instanceof tt?await this.textFileService.files.canDispose(n):n instanceof it&&await this.textFileService.untitled.canDispose(n),!this.modelsToDispose.has(e)))return;n.dispose()}catch{}finally{this.modelsToDispose.delete(e)}})())}registerTextModelContentProvider(e,t){let i=this.providers.get(e);return i||(i=[],this.providers.set(e,i)),i.unshift(t),Bt(()=>{const n=this.providers.get(e);if(!n)return;const r=n.indexOf(t);r!==-1&&(n.splice(r,1),n.length===0&&this.providers.delete(e))})}hasTextModelContentProvider(e){return this.providers.get(e)!==void 0}async resolveTextModelContent(e){const t=T.parse(e),i=this.providers.get(t.scheme)||[];for(const n of i){const r=await n.provideTextContent(t);if(r)return r}throw new Error(`Unable to resolve text model content for resource ${e}`)}};te=p([g(0,F),g(1,Vt),g(2,_),g(3,ce)],te);let ie=class extends C{get resourceModelCollection(){return this._resourceModelCollection||(this._resourceModelCollection=this.instantiationService.createInstance(te)),this._resourceModelCollection}get asyncModelCollection(){return this._asyncModelCollection||(this._asyncModelCollection=new qt(this.resourceModelCollection)),this._asyncModelCollection}constructor(e,t,i,n,r){super(),this.instantiationService=e,this.fileService=t,this.undoRedoService=i,this.modelService=n,this.uriIdentityService=r,this._resourceModelCollection=void 0,this._asyncModelCollection=void 0,this._register(new ee(this.modelService,this,this.undoRedoService))}async createModelReference(e){return e=this.uriIdentityService.asCanonicalUri(e),await this.asyncModelCollection.acquire(e.toString())}registerTextModelContentProvider(e,t){return this.resourceModelCollection.registerTextModelContentProvider(e,t)}canHandleResource(e){return this.fileService.hasProvider(e)||e.scheme===y.untitled||e.scheme===y.inMemory?!0:this.resourceModelCollection.hasTextModelContentProvider(e.scheme)}};ie=p([g(0,F),g(1,_),g(2,Me),g(3,ce),g(4,De)],ie);function hi(){return{[$e.toString()]:new x(ie,[],!0)}}const pi=s=>{const e=Pe(),t=(i,n)=>{s.logger?.info(`getWorker: moduleId: ${i} label: ${n}`);const r=s.workerLoaders?.[n]??void 0;if(r===void 0)throw new Error(`Unimplemented worker ${n} (${i})`);return r()};e.getWorker=s.getWorkerOverride??t},Pe=()=>{const s=self;s.MonacoEnvironment===void 0&&(s.MonacoEnvironment={});const e=s.MonacoEnvironment;return e.vscodeApiInitialised===void 0&&(e.vscodeApiInitialised=!1),e.vscodeInitialising===void 0&&(e.vscodeInitialising=!1),e},mi=async()=>({...rt(),...ui(),...ni(),...hi()}),vi=(s,e)=>{for(const t of Object.keys(s))e?.debug(`Loading service: ${t}`)},L=(s,e)=>{if(e!==void 0)for(const[t,i]of Object.entries(e))s[t]=i},wi=async(s,e)=>{const t=Pe();return typeof e?.monacoWorkerFactory=="function"?e.monacoWorkerFactory(e.logger):pi({logger:e?.logger}),(t.vscodeInitialising??!1)||(t.vscodeApiInitialised??!1?e?.logger?.debug("Initialization of vscode services can only performed once!"):(t.vscodeInitialising=!0,e?.logger?.debug(`Initializing vscode services. Caller: ${e.caller??"unknown"}`),s.userConfiguration?.json!==void 0&&await nt(s.userConfiguration.json),await Ci(s,e),s.viewsConfig?.htmlAugmentationInstructions?.(e?.htmlContainer),await s.viewsConfig?.viewsInitFunc?.(),e?.logger?.debug("Initialization of vscode services completed successfully."),t.vscodeApiInitialised=!0,t.vscodeInitialising=!1)),t.vscodeApiInitialised},Ci=async(s,e)=>{const t=await mi();L(t,s.serviceOverrides),await yi(s.enableExtHostWorker===!0,t),vi(t,e?.logger),(e?.performServiceConsistencyChecks===void 0||typeof e.performServiceConsistencyChecks=="function"&&e.performServiceConsistencyChecks())&&(s.viewsConfig?.viewServiceType==="ViewsService"||s.viewsConfig?.viewServiceType==="WorkspaceService"?await ue(t,e?.htmlContainer,s.workspaceConfig,s.envOptions):await ue(t,void 0,s.workspaceConfig,s.envOptions)),Nt(i=>{e?.logger?.createErrorAndLog("Unexpected error",i)})},yi=async(s,e)=>{if(s){const t=new ai(new URL("/assets/extensionHost.worker-LFnCqldL.js",import.meta.url),{type:"module"}),i={url:t.url.toString(),options:t.options};L(e,{...qe(i)})}},Li=async(s,e)=>{const t=e.vscodeApiConfig,i=t.serviceOverrides??{};return await bi(s,i),await Si(i,t.viewsConfig),xi(t),Ei(t,e.logLevel),Ri(t,e.semanticHighlighting),t.serviceOverrides=i,t},bi=async(s,e)=>{if(s==="extended"){const t=(await w(async()=>{const{default:n}=await import("./index-qY1GkVaY.js");return{default:n}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10]))).default,i=(await w(async()=>{const{default:n}=await import("./index-lcRw0zhU.js");return{default:n}},__vite__mapDeps([11,1,2,5,3,4,6,7,9,8]))).default;L(e,{...t(),...i()})}else{const t=(await w(async()=>{const{default:i}=await import("./index-sIP7ilWO.js");return{default:i}},__vite__mapDeps([12,1,2,5,3,4,6,7,13]))).default;L(e,{...t()})}},Si=async(s,e)=>{if(e?.viewServiceType==="ViewsService"){const t=(await w(async()=>{const{default:i}=await import("./index-7G4fTsao.js");return{default:i}},__vite__mapDeps([14,1,2,3,4,5,6,7,15,16,8,17,18,19]))).default;L(s,{...t(e.openEditorFunc??we)})}else if(e?.viewServiceType==="WorkspaceService"){const t=(await w(async()=>{const{default:i}=await import("./index-BAsNJ4_y.js");return{default:i}},__vite__mapDeps([20,1,2,15,3,4,5,6,7,16,8,17,18,21]))).default;L(s,{...t()})}else{const t=(await w(async()=>{const{default:i}=await import("./index-CEF87QAt.js");return{default:i}},__vite__mapDeps([22,1,2,3,4,5,6,7,16,19]))).default;L(s,{...t(e?.openEditorFunc??we)})}},xi=s=>{s.workspaceConfig===void 0&&(s.workspaceConfig={workspaceProvider:{trusted:!0,workspace:{workspaceUri:ye.file("/workspace.code-workspace")},async open(){return window.open(window.location.href),!0}}})},Ei=(s,e)=>{const t=s.workspaceConfig.developmentOptions?.logLevel;if(t===void 0){const i={...s.workspaceConfig.developmentOptions};i.logLevel=e,s.workspaceConfig.developmentOptions=Object.assign({},i)}else if(t!==e)throw new Error(`You have configured mismatching logLevels: ${e} (wrapperConfig) ${t} (workspaceConfig.developmentOptions)`)},Ri=(s,e)=>{if(e??!1){const t={...s.workspaceConfig.configurationDefaults};t["editor.semanticHighlighting.enabled"]=!0,s.workspaceConfig.configurationDefaults=Object.assign({},t)}},we=async(s,e,t)=>{console.log("Received open editor call with parameters: ",s,e,t)},ki=s=>{const e=Object.keys(s??{}).includes("themeService"),t=Object.keys(s??{}).includes("textMateTokenizationFeature"),i=Object.keys(s??{}).includes("markersService"),n=Object.keys(s??{}).includes("viewsService");if(e&&!t)throw new Error('"theme" service requires "textmate" service. Please add it to the "userServices".');if(i&&!n)throw new Error('"markers" service requires "views" service. Please add it to the "userServices".');return!0};class Gi{id;editorApp;extensionRegisterResults=new Map;disposableStore=new O;languageClientWrappers=new Map;wrapperConfig;logger=new ri;initAwait;initResolve;startingAwait;startingResolve;disposingAwait;disposingResolve;async init(e){this.isInitializing()&&await this.getInitializingAwait();const t=e.editorAppConfig;if((t?.useDiffEditor??!1)&&!t?.codeResources?.original)throw new Error(`Use diff editor was used without a valid config. code: ${t?.codeResources?.modified} codeOriginal: ${t?.codeResources?.original}`);const i=e.vscodeApiConfig?.viewsConfig?.viewServiceType??"EditorService";if(e.$type==="classic"&&(i==="ViewsService"||i==="WorkspaceService"))throw new Error(`View Service Type "${i}" cannot be used with classic configuration.`);if(e.automaticallyDispose??!0)await this.dispose();else if(this.wrapperConfig!==void 0)throw new Error("You configured the wrapper to not automatically dispose on init, but did not dispose manually. Please call dispose first if you want to re-start.");try{this.markInitializing(),this.id=e.id??Math.floor(Math.random()*1000001).toString(),this.logger.setLevel(e.logLevel??d.Off),e.vscodeApiConfig?.vscodeApiInitPerformExternally!==!0&&(e.vscodeApiConfig=await Li(e.$type,{vscodeApiConfig:e.vscodeApiConfig??{},logLevel:this.logger.getLevel(),semanticHighlighting:e.editorAppConfig?.editorOptions?.["semanticHighlighting.enabled"]===!0}),await wi(e.vscodeApiConfig,{monacoWorkerFactory:e.editorAppConfig?.monacoWorkerFactory,htmlContainer:e.htmlContainer,caller:`monaco-editor (${this.id})`,performServiceConsistencyChecks:ki,logger:this.logger})),this.wrapperConfig=e,(this.wrapperConfig.languageClientConfigs?.automaticallyInit??!0)&&this.initLanguageClients(),await this.initExtensions(),this.editorApp=new Jt(this.wrapperConfig.$type,this.id,this.wrapperConfig.editorAppConfig,this.logger),await this.editorApp.init()}catch(n){throw n}finally{this.markInitialized()}}initLanguageClients(){const e=Object.entries(this.wrapperConfig?.languageClientConfigs?.configs??{});if(e.length>0)for(const[t,i]of e){const n=new oi({languageClientConfig:i,logger:this.logger});this.languageClientWrappers.set(t,n)}}async initExtensions(){const e=this.wrapperConfig?.vscodeApiConfig;this.wrapperConfig?.$type==="extended"&&(e?.loadThemes===void 0||e.loadThemes===!0)&&await w(()=>import("./index-B7jaQFCX.js"),__vite__mapDeps([23,3,1,2,4,5,6,7]));const t=this.wrapperConfig?.extensions;if(this.wrapperConfig?.extensions){const i=[],n=[];Ne().forEach(r=>{n.push(r.identifier.id)});for(const r of t??[])if(!n.includes(`${r.config.publisher}.${r.config.name}`)){const c=r.config,o=He(c,Ke.LocalProcess);if(this.extensionRegisterResults.set(c.name,o),r.filesOrContents&&Object.hasOwn(o,"registerFileUrl"))for(const l of r.filesOrContents)this.disposableStore.add(o.registerFileUrl(l[0],Xt(l[1])));i.push(o.whenReady())}await Promise.all(i)}}markInitializing(){this.initAwait=new Promise(e=>{this.initResolve=e})}markInitialized(){this.initResolve(),this.initAwait=void 0}isInitializing(){return this.initAwait!==void 0}getInitializingAwait(){return this.initAwait}getWrapperConfig(){return this.wrapperConfig}getExtensionRegisterResult(e){return this.extensionRegisterResults.get(e)}async initAndStart(e){await this.init(e),await this.start()}async start(e){if(this.isStarting()&&await this.getStartingAwait(),this.wrapperConfig===void 0)throw new Error("No init was performed. Please call init() before start()");this.markStarting();try{const t=this.wrapperConfig.vscodeApiConfig?.viewsConfig?.viewServiceType;if(t==="EditorService"||t===void 0){this.logger.info(`Starting monaco-editor (${this.id})`);const i=e===void 0?this.wrapperConfig.htmlContainer:e;if(i===void 0)throw new Error("No html container provided. Unable to start monaco-editor.");await this.editorApp?.createEditors(i)}else this.logger.info("No EditorService configured. monaco-editor will not be started.");(this.wrapperConfig.languageClientConfigs?.automaticallyStart??!0)&&await this.startLanguageClients()}catch(t){throw t}finally{this.markStarted()}}async startLanguageClients(){const e=[];for(const t of this.languageClientWrappers.values())e.push(t.start());return Promise.all(e)}markStarting(){this.startingAwait=new Promise(e=>{this.startingResolve=e})}markStarted(){this.startingResolve(),this.startingAwait=void 0}isStarting(){return this.startingAwait!==void 0}getStartingAwait(){return this.startingAwait}isStarted(){if(!(this.editorApp?.haveEditor()??!1))return!1;for(const e of this.languageClientWrappers.values())if(e.haveLanguageClient()&&!e.isStarted())return!1;return!0}haveLanguageClients(){return this.languageClientWrappers.size>0}getEditorApp(){return this.editorApp}getEditor(){return this.editorApp?.getEditor()}getDiffEditor(){return this.editorApp?.getDiffEditor()}getLanguageClientWrapper(e){return this.languageClientWrappers.get(e)}getLanguageClient(e){return this.languageClientWrappers.get(e)?.getLanguageClient()}getTextModels(){return this.editorApp?.getTextModels()}getWorker(e){return this.languageClientWrappers.get(e)?.getWorker()}getLogger(){return this.logger}async updateCodeResources(e){return this.editorApp?.updateCodeResources(e)}registerTextChangedCallback(e){this.editorApp?.registerOnTextChangedCallbacks(e)}reportStatus(){const e=[];return e.push("Wrapper status:"),e.push(`Editor: ${this.editorApp?.getEditor()?.getId()}`),e.push(`DiffEditor: ${this.editorApp?.getDiffEditor()?.getId()}`),e}async dispose(){this.isDisposing()&&await this.getDisposingAwait(),this.markDisposing(),await this.editorApp?.dispose(),this.editorApp=void 0,this.extensionRegisterResults.forEach(e=>e.dispose()),this.disposableStore.dispose(),this.disposableStore=new O;try{(this.wrapperConfig?.languageClientConfigs?.automaticallyDispose??!0)&&await this.disposeLanguageClients()}catch(e){throw e}finally{this.languageClientWrappers.clear(),this.wrapperConfig=void 0,this.markDisposed()}}async disposeLanguageClients(){const e=this.wrapperConfig?.languageClientConfigs?.automaticallyDisposeWorkers??!1,t=[];for(const i of this.languageClientWrappers.values())i.haveLanguageClient()&&t.push(i.disposeLanguageClient(e));return Promise.all(t)}markDisposing(){this.disposingAwait=new Promise(e=>{this.disposingResolve=e})}markDisposed(){this.disposingResolve(),this.disposingAwait=void 0}isDisposing(){return this.disposingAwait!==void 0}getDisposingAwait(){return this.disposingAwait}updateLayout(){this.editorApp?.updateLayout()}}export{Gi as M,pi as u};
